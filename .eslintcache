[{"/Users/sawadamakoto/PC/Github/typescript-twitter_clone/src/index.tsx":"1","/Users/sawadamakoto/PC/Github/typescript-twitter_clone/src/serviceWorker.ts":"2","/Users/sawadamakoto/PC/Github/typescript-twitter_clone/src/app/store.ts":"3","/Users/sawadamakoto/PC/Github/typescript-twitter_clone/src/App.tsx":"4","/Users/sawadamakoto/PC/Github/typescript-twitter_clone/src/features/userSlice.ts":"5","/Users/sawadamakoto/PC/Github/typescript-twitter_clone/src/firebase.ts":"6","/Users/sawadamakoto/PC/Github/typescript-twitter_clone/src/components/Auth.tsx":"7","/Users/sawadamakoto/PC/Github/typescript-twitter_clone/src/components/Feed.tsx":"8","/Users/sawadamakoto/PC/Github/typescript-twitter_clone/src/components/TweetIput.tsx":"9","/Users/sawadamakoto/PC/Github/typescript-twitter_clone/src/components/Post.tsx":"10"},{"size":648,"mtime":1608463055409,"results":"11","hashOfConfig":"12"},{"size":5424,"mtime":1608463055411,"results":"13","hashOfConfig":"12"},{"size":394,"mtime":1608463055405,"results":"14","hashOfConfig":"12"},{"size":1055,"mtime":1608463055404,"results":"15","hashOfConfig":"12"},{"size":926,"mtime":1608463055408,"results":"16","hashOfConfig":"12"},{"size":791,"mtime":1608463055409,"results":"17","hashOfConfig":"12"},{"size":6572,"mtime":1608463055406,"results":"18","hashOfConfig":"12"},{"size":1314,"mtime":1608536545571,"results":"19","hashOfConfig":"12"},{"size":3503,"mtime":1608540371656,"results":"20","hashOfConfig":"12"},{"size":1369,"mtime":1608540375035,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1k7imtq",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"24"},"/Users/sawadamakoto/PC/Github/typescript-twitter_clone/src/index.tsx",[],["46","47"],"/Users/sawadamakoto/PC/Github/typescript-twitter_clone/src/serviceWorker.ts",[],"/Users/sawadamakoto/PC/Github/typescript-twitter_clone/src/app/store.ts",[],"/Users/sawadamakoto/PC/Github/typescript-twitter_clone/src/App.tsx",[],"/Users/sawadamakoto/PC/Github/typescript-twitter_clone/src/features/userSlice.ts",["48"],"import { useDispatch } from \"react-redux\";\r\nimport { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { RootState } from \"../app/store\";\r\n\r\ninterface USER {\r\n  displayName: string;\r\n  photoURL: string;\r\n}\r\n\r\nexport const userSlice = createSlice({\r\n  name: \"user\",\r\n  initialState: {\r\n    user: { uid: \"\", photoUrl: \"\", displayName: \"\" },\r\n  },\r\n  reducers: {\r\n    login: (state, action) => {\r\n      state.user = action.payload;\r\n    },\r\n    logout: (state) => {\r\n      state.user = { uid: \"\", photoUrl: \"\", displayName: \"\" };\r\n    },\r\n    updateUserProfile: (state, action: PayloadAction<USER>) => {\r\n      state.user.displayName = action.payload.displayName;\r\n      state.user.photoUrl = action.payload.photoURL;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { login, logout, updateUserProfile } = userSlice.actions;\r\n\r\nexport const selectUser = (state: RootState) => state.user.user;\r\n\r\nexport default userSlice.reducer;\r\n","/Users/sawadamakoto/PC/Github/typescript-twitter_clone/src/firebase.ts",[],"/Users/sawadamakoto/PC/Github/typescript-twitter_clone/src/components/Auth.tsx",["49","50","51","52","53","54","55","56"],"import React, { useState } from \"react\";\nimport styles from \"./Auth.module.css\";\nimport { updateUserProfile } from \"../features/userSlice\";\nimport { auth, provider, storage } from \"../firebase\";\n\nimport {\n  Avatar,\n  Button,\n  CssBaseline,\n  TextField,\n  Paper,\n  Grid,\n  Typography,\n  makeStyles,\n  Modal,\n  IconButton,\n  Box,\n} from \"@material-ui/core\";\n\nimport SendIcon from \"@material-ui/icons/Send\";\nimport CameraIcon from \"@material-ui/icons/Camera\";\nimport EmailIcon from \"@material-ui/icons/Email\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\nimport { useDispatch } from \"react-redux\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: \"100vh\",\n  },\n  image: {\n    backgroundImage:\n      \"url(https://images.unsplash.com/photo-1607156850288-954e013cc52b?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=968&q=80)\",\n    backgroundRepeat: \"no-repeat\",\n    backgroundColor:\n      theme.palette.type === \"light\"\n        ? theme.palette.grey[50]\n        : theme.palette.grey[900],\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\",\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport const Auth: React.FC = () => {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [avatarImage, setAvatarImage] = useState<File | null>(null);\n  const [isLogin, setIsLogin] = useState(true);\n  const onChangeImageHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (e.target.files![0]) {\n      //オブジェクトがnullである可能性がある場合、nonNullアサーションオペレータ(!)をつけないとエラーが出る\n      setAvatarImage(e.target.files![0]);\n      e.target.value = \"\";\n    }\n  };\n\n  const signInEmail = async () => {\n    await auth.signInWithEmailAndPassword(email, password);\n  };\n\n  const signUpEmail = async () => {\n    const authUser = await auth.createUserWithEmailAndPassword(email, password);\n    let url = \"\";\n    if (avatarImage) {\n      const S =\n        \"abcdefghijklmnopqrstyvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\n      const N = 16;\n      const randomChar = Array.from(crypto.getRandomValues(new Uint32Array(N)))\n        .map((n) => S[n % S.length])\n        .join(\"\");\n      const fileName = randomChar + \"_\" + avatarImage.name;\n\n      await storage.ref(`avatars/${fileName}`).put(avatarImage); //firestorageへ画像をアップロードできる\n      url = await storage.ref(\"avatars\").child(fileName).getDownloadURL();\n    }\n    await authUser.user?.updateProfile({\n      //authUserのuser属性が存在する場合(?の部分)updateProfileでオブジェクト内を更新していく\n      displayName: username,\n      photoURL: url,\n    });\n    dispatch(\n      updateUserProfile({\n        displayName: username,\n        photoURL: url,\n      })\n    );\n  };\n\n  const signInGoogle = async () => {\n    await auth.signInWithPopup(provider).catch((error) => alert(error.message));\n  };\n\n  return (\n    <Grid container component=\"main\" className={classes.root}>\n      <CssBaseline />\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            {isLogin ? \"Login\" : \"Register\"}\n          </Typography>\n          <form className={classes.form} noValidate>\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email Address\"\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n              value={email}\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                setEmail(e.target.value);\n              }}\n            />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n              value={password}\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                setPassword(e.target.value);\n              }}\n            />\n            <Button\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n              startIcon={<EmailIcon />}\n              onClick={\n                isLogin\n                  ? async () => {\n                      try {\n                        await signInEmail();\n                      } catch (err) {\n                        alert(err.message);\n                      }\n                    }\n                  : async () => {\n                      try {\n                        await signUpEmail();\n                      } catch (err) {\n                        alert(err.message);\n                      }\n                    }\n              }\n            >\n              {isLogin ? \"Login\" : \"Register\"}\n            </Button>\n            <Grid container>\n              <Grid item xs>\n                <span className={styles.login_reset}>Forgot psaaword?</span>\n              </Grid>\n              <Grid item xs>\n                <span\n                  className={styles.login_toggleMode}\n                  onClick={() => setIsLogin(!isLogin)}\n                >\n                  {isLogin ? \"Create new account ?\" : \"Back to login\"}\n                </span>\n              </Grid>\n            </Grid>\n            <Button\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n              onClick={signInGoogle}\n            >\n              Sign In With Google\n            </Button>\n          </form>\n        </div>\n      </Grid>\n    </Grid>\n  );\n};\n","/Users/sawadamakoto/PC/Github/typescript-twitter_clone/src/components/Feed.tsx",[],"/Users/sawadamakoto/PC/Github/typescript-twitter_clone/src/components/TweetIput.tsx",[],"/Users/sawadamakoto/PC/Github/typescript-twitter_clone/src/components/Post.tsx",["57","58","59"],"import React from \"react\";\nimport styles from \"./Post.module.css\";\nimport firebase from \"firebase/app\";\nimport { selectUser } from \"../features/userSlice\";\nimport { Avatar } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n// import { MessageIcon } from \"@material-ui/icons/Message\";\n// import { SendIcon } from \"@material-ui/icons/Send\";\n\ninterface PROPS {\n  postId: string;\n  avatar: string;\n  image: string;\n  text: string;\n  timestamp: any;\n  username: string;\n}\n\nexport const Post: React.FC<PROPS> = (props) => {\n  return (\n    <div className={styles.post}>\n      <div className={styles.post_avatar}>\n        <Avatar src={props.avatar} />\n      </div>\n      <div className={styles.post_body}>\n        <div>\n          <div className={styles.post_header}>\n            <h3>\n              <span className={styles.post_headerUser}>@{props.username}</span>\n              <span className={styles.post_headerTime}>\n                {new Date(props.timestamp?.toDate()).toLocaleString()}\n              </span>\n            </h3>\n          </div>\n          <div className={styles.post_tweet}>\n            <p>{props.text}</p>\n          </div>\n        </div>\n        {props.image && (\n          <div className={styles.post_tweetImage}>\n            <img src={props.image} alt=\"tweet\" />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n",{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":1,"column":10,"nodeType":"66","messageId":"67","endLine":1,"endColumn":21},{"ruleId":"64","severity":1,"message":"68","line":15,"column":3,"nodeType":"66","messageId":"67","endLine":15,"endColumn":8},{"ruleId":"64","severity":1,"message":"69","line":16,"column":3,"nodeType":"66","messageId":"67","endLine":16,"endColumn":13},{"ruleId":"64","severity":1,"message":"70","line":17,"column":3,"nodeType":"66","messageId":"67","endLine":17,"endColumn":6},{"ruleId":"64","severity":1,"message":"71","line":20,"column":8,"nodeType":"66","messageId":"67","endLine":20,"endColumn":16},{"ruleId":"64","severity":1,"message":"72","line":21,"column":8,"nodeType":"66","messageId":"67","endLine":21,"endColumn":18},{"ruleId":"64","severity":1,"message":"73","line":24,"column":8,"nodeType":"66","messageId":"67","endLine":24,"endColumn":25},{"ruleId":"64","severity":1,"message":"74","line":66,"column":20,"nodeType":"66","messageId":"67","endLine":66,"endColumn":31},{"ruleId":"64","severity":1,"message":"75","line":69,"column":9,"nodeType":"66","messageId":"67","endLine":69,"endColumn":29},{"ruleId":"64","severity":1,"message":"76","line":3,"column":8,"nodeType":"66","messageId":"67","endLine":3,"endColumn":16},{"ruleId":"64","severity":1,"message":"77","line":4,"column":10,"nodeType":"66","messageId":"67","endLine":4,"endColumn":20},{"ruleId":"64","severity":1,"message":"78","line":6,"column":10,"nodeType":"66","messageId":"67","endLine":6,"endColumn":20},"no-native-reassign",["79"],"no-negated-in-lhs",["80"],"@typescript-eslint/no-unused-vars","'useDispatch' is defined but never used.","Identifier","unusedVar","'Modal' is defined but never used.","'IconButton' is defined but never used.","'Box' is defined but never used.","'SendIcon' is defined but never used.","'CameraIcon' is defined but never used.","'AccountCircleIcon' is defined but never used.","'setUsername' is assigned a value but never used.","'onChangeImageHandler' is assigned a value but never used.","'firebase' is defined but never used.","'selectUser' is defined but never used.","'makeStyles' is defined but never used.","no-global-assign","no-unsafe-negation"]