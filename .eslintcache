[{"/Users/sawadamakoto/PC/Github/typescript-twitter_clone/src/index.tsx":"1","/Users/sawadamakoto/PC/Github/typescript-twitter_clone/src/serviceWorker.ts":"2","/Users/sawadamakoto/PC/Github/typescript-twitter_clone/src/app/store.ts":"3","/Users/sawadamakoto/PC/Github/typescript-twitter_clone/src/App.tsx":"4","/Users/sawadamakoto/PC/Github/typescript-twitter_clone/src/features/userSlice.ts":"5","/Users/sawadamakoto/PC/Github/typescript-twitter_clone/src/firebase.ts":"6","/Users/sawadamakoto/PC/Github/typescript-twitter_clone/src/components/Auth.tsx":"7","/Users/sawadamakoto/PC/Github/typescript-twitter_clone/src/components/Feed.tsx":"8","/Users/sawadamakoto/PC/Github/typescript-twitter_clone/src/components/TweetIput.tsx":"9","/Users/sawadamakoto/PC/Github/typescript-twitter_clone/src/components/Post.tsx":"10"},{"size":648,"mtime":1608463055409,"results":"11","hashOfConfig":"12"},{"size":5424,"mtime":1608463055411,"results":"13","hashOfConfig":"12"},{"size":394,"mtime":1608463055405,"results":"14","hashOfConfig":"12"},{"size":1055,"mtime":1608463055404,"results":"15","hashOfConfig":"12"},{"size":926,"mtime":1608463055408,"results":"16","hashOfConfig":"12"},{"size":791,"mtime":1608463055409,"results":"17","hashOfConfig":"12"},{"size":9434,"mtime":1608554243118,"results":"18","hashOfConfig":"12"},{"size":1326,"mtime":1608611100115,"results":"19","hashOfConfig":"12"},{"size":3503,"mtime":1608552743176,"results":"20","hashOfConfig":"12"},{"size":1369,"mtime":1608552743176,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1k7imtq",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"24"},"/Users/sawadamakoto/PC/Github/typescript-twitter_clone/src/index.tsx",[],["45","46"],"/Users/sawadamakoto/PC/Github/typescript-twitter_clone/src/serviceWorker.ts",[],"/Users/sawadamakoto/PC/Github/typescript-twitter_clone/src/app/store.ts",[],"/Users/sawadamakoto/PC/Github/typescript-twitter_clone/src/App.tsx",[],"/Users/sawadamakoto/PC/Github/typescript-twitter_clone/src/features/userSlice.ts",["47"],"import { useDispatch } from \"react-redux\";\r\nimport { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { RootState } from \"../app/store\";\r\n\r\ninterface USER {\r\n  displayName: string;\r\n  photoURL: string;\r\n}\r\n\r\nexport const userSlice = createSlice({\r\n  name: \"user\",\r\n  initialState: {\r\n    user: { uid: \"\", photoUrl: \"\", displayName: \"\" },\r\n  },\r\n  reducers: {\r\n    login: (state, action) => {\r\n      state.user = action.payload;\r\n    },\r\n    logout: (state) => {\r\n      state.user = { uid: \"\", photoUrl: \"\", displayName: \"\" };\r\n    },\r\n    updateUserProfile: (state, action: PayloadAction<USER>) => {\r\n      state.user.displayName = action.payload.displayName;\r\n      state.user.photoUrl = action.payload.photoURL;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { login, logout, updateUserProfile } = userSlice.actions;\r\n\r\nexport const selectUser = (state: RootState) => state.user.user;\r\n\r\nexport default userSlice.reducer;\r\n","/Users/sawadamakoto/PC/Github/typescript-twitter_clone/src/firebase.ts",[],"/Users/sawadamakoto/PC/Github/typescript-twitter_clone/src/components/Auth.tsx",[],"/Users/sawadamakoto/PC/Github/typescript-twitter_clone/src/components/Feed.tsx",["48"],"/Users/sawadamakoto/PC/Github/typescript-twitter_clone/src/components/TweetIput.tsx",[],"/Users/sawadamakoto/PC/Github/typescript-twitter_clone/src/components/Post.tsx",["49","50","51"],"import React from \"react\";\nimport styles from \"./Post.module.css\";\nimport firebase from \"firebase/app\";\nimport { selectUser } from \"../features/userSlice\";\nimport { Avatar } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n// import { MessageIcon } from \"@material-ui/icons/Message\";\n// import { SendIcon } from \"@material-ui/icons/Send\";\n\ninterface PROPS {\n  postId: string;\n  avatar: string;\n  image: string;\n  text: string;\n  timestamp: any;\n  username: string;\n}\n\nexport const Post: React.FC<PROPS> = (props) => {\n  return (\n    <div className={styles.post}>\n      <div className={styles.post_avatar}>\n        <Avatar src={props.avatar} />\n      </div>\n      <div className={styles.post_body}>\n        <div>\n          <div className={styles.post_header}>\n            <h3>\n              <span className={styles.post_headerUser}>@{props.username}</span>\n              <span className={styles.post_headerTime}>\n                {new Date(props.timestamp?.toDate()).toLocaleString()}\n              </span>\n            </h3>\n          </div>\n          <div className={styles.post_tweet}>\n            <p>{props.text}</p>\n          </div>\n        </div>\n        {props.image && (\n          <div className={styles.post_tweetImage}>\n            <img src={props.image} alt=\"tweet\" />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n",{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":1,"column":10,"nodeType":"58","messageId":"59","endLine":1,"endColumn":21},{"ruleId":"56","severity":1,"message":"60","line":20,"column":11,"nodeType":"58","messageId":"59","endLine":20,"endColumn":16},{"ruleId":"56","severity":1,"message":"61","line":3,"column":8,"nodeType":"58","messageId":"59","endLine":3,"endColumn":16},{"ruleId":"56","severity":1,"message":"62","line":4,"column":10,"nodeType":"58","messageId":"59","endLine":4,"endColumn":20},{"ruleId":"56","severity":1,"message":"63","line":6,"column":10,"nodeType":"58","messageId":"59","endLine":6,"endColumn":20},"no-native-reassign",["64"],"no-negated-in-lhs",["65"],"@typescript-eslint/no-unused-vars","'useDispatch' is defined but never used.","Identifier","unusedVar","'unSub' is assigned a value but never used.","'firebase' is defined but never used.","'selectUser' is defined but never used.","'makeStyles' is defined but never used.","no-global-assign","no-unsafe-negation"]